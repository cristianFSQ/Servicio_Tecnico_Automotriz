#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.18408
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MvcApplicationSTA.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BD_Automotriz")]
	public partial class DataAutomotrizDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void Insertadministrador(administrador instance);
    partial void Updateadministrador(administrador instance);
    partial void Deleteadministrador(administrador instance);
    partial void Insertcliente(cliente instance);
    partial void Updatecliente(cliente instance);
    partial void Deletecliente(cliente instance);
    partial void Insertmarcas(marcas instance);
    partial void Updatemarcas(marcas instance);
    partial void Deletemarcas(marcas instance);
    partial void Insertmecanico(mecanico instance);
    partial void Updatemecanico(mecanico instance);
    partial void Deletemecanico(mecanico instance);
    partial void Insertmodelos(modelos instance);
    partial void Updatemodelos(modelos instance);
    partial void Deletemodelos(modelos instance);
    partial void Insertmotor(motor instance);
    partial void Updatemotor(motor instance);
    partial void Deletemotor(motor instance);
    partial void Insertseguro(seguro instance);
    partial void Updateseguro(seguro instance);
    partial void Deleteseguro(seguro instance);
    partial void InsertUserPerfiles(UserPerfiles instance);
    partial void UpdateUserPerfiles(UserPerfiles instance);
    partial void DeleteUserPerfiles(UserPerfiles instance);
    partial void Insertvehiculo(vehiculo instance);
    partial void Updatevehiculo(vehiculo instance);
    partial void Deletevehiculo(vehiculo instance);
    #endregion
		
		public DataAutomotrizDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["BD_AutomotrizConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataAutomotrizDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataAutomotrizDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataAutomotrizDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataAutomotrizDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<administrador> administrador
		{
			get
			{
				return this.GetTable<administrador>();
			}
		}
		
		public System.Data.Linq.Table<cliente> cliente
		{
			get
			{
				return this.GetTable<cliente>();
			}
		}
		
		public System.Data.Linq.Table<marcas> marcas
		{
			get
			{
				return this.GetTable<marcas>();
			}
		}
		
		public System.Data.Linq.Table<mecanico> mecanico
		{
			get
			{
				return this.GetTable<mecanico>();
			}
		}
		
		public System.Data.Linq.Table<modelos> modelos
		{
			get
			{
				return this.GetTable<modelos>();
			}
		}
		
		public System.Data.Linq.Table<motor> motor
		{
			get
			{
				return this.GetTable<motor>();
			}
		}
		
		public System.Data.Linq.Table<seguro> seguro
		{
			get
			{
				return this.GetTable<seguro>();
			}
		}
		
		public System.Data.Linq.Table<UserPerfiles> UserPerfiles
		{
			get
			{
				return this.GetTable<UserPerfiles>();
			}
		}
		
		public System.Data.Linq.Table<vehiculo> vehiculo
		{
			get
			{
				return this.GetTable<vehiculo>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.LISTAR_MECANICO")]
		public ISingleResult<LISTAR_MECANICOResult> LISTAR_MECANICO()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<LISTAR_MECANICOResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ELIMINAR_MECANICO")]
		public int ELIMINAR_MECANICO([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> rut_mecanico)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), rut_mecanico);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.BUSCAR_MECANICO")]
		public ISingleResult<BUSCAR_MECANICOResult> BUSCAR_MECANICO([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> rut)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), rut);
			return ((ISingleResult<BUSCAR_MECANICOResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.INSERTAR_CLIENTE")]
		public int INSERTAR_CLIENTE([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RutC", DbType="Char(12)")] string rutC, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NombreC", DbType="VarChar(70)")] string nombreC, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ApellidoC", DbType="VarChar(70)")] string apellidoC, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FonoC", DbType="VarChar(10)")] string fonoC, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmailC", DbType="VarChar(70)")] string emailC, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Clave1C", DbType="VarChar(10)")] string clave1C, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Clave2C", DbType="VarChar(10)")] string clave2C, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SeguroC", DbType="Int")] System.Nullable<int> seguroC, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdC", DbType="Int")] System.Nullable<int> idC)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), rutC, nombreC, apellidoC, fonoC, emailC, clave1C, clave2C, seguroC, idC);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.LISTAR_CLIENTE")]
		public ISingleResult<LISTAR_CLIENTEResult> LISTAR_CLIENTE()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<LISTAR_CLIENTEResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.INSERTAR_MECANICO")]
		public int INSERTAR_MECANICO([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RutM", DbType="Char(12)")] string rutM, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Clave1M", DbType="VarChar(10)")] string clave1M, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Clave2M", DbType="VarChar(10)")] string clave2M, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NombreM", DbType="VarChar(70)")] string nombreM, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ApellidoM", DbType="VarChar(70)")] string apellidoM, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FonoM", DbType="Char(10)")] string fonoM, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CorreoM", DbType="VarChar(70)")] string correoM, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdM", DbType="Int")] System.Nullable<int> idM)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), rutM, clave1M, clave2M, nombreM, apellidoM, fonoM, correoM, idM);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.LISTAR_VEHICULO")]
		public ISingleResult<LISTAR_VEHICULOResult> LISTAR_VEHICULO()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<LISTAR_VEHICULOResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.INSERTAR_VEHICULO")]
		public int INSERTAR_VEHICULO([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RutV", DbType="Char(12)")] string rutV, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AnoV", DbType="Char(4)")] string anoV, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PatV", DbType="Char(10)")] string patV, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MotV", DbType="Int")] System.Nullable<int> motV, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MarV", DbType="Int")] System.Nullable<int> marV)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), rutV, anoV, patV, motV, marV);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.administrador")]
	public partial class administrador : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AdmRut;
		
		private string _AdmCla;
		
		private string _AdmNom;
		
		private string _AdmApe;
		
		private int _AdmID;
		
		private EntityRef<UserPerfiles> _UserPerfiles;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdmRutChanging(string value);
    partial void OnAdmRutChanged();
    partial void OnAdmClaChanging(string value);
    partial void OnAdmClaChanged();
    partial void OnAdmNomChanging(string value);
    partial void OnAdmNomChanged();
    partial void OnAdmApeChanging(string value);
    partial void OnAdmApeChanged();
    partial void OnAdmIDChanging(int value);
    partial void OnAdmIDChanged();
    #endregion
		
		public administrador()
		{
			this._UserPerfiles = default(EntityRef<UserPerfiles>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmRut", DbType="Char(12) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AdmRut
		{
			get
			{
				return this._AdmRut;
			}
			set
			{
				if ((this._AdmRut != value))
				{
					this.OnAdmRutChanging(value);
					this.SendPropertyChanging();
					this._AdmRut = value;
					this.SendPropertyChanged("AdmRut");
					this.OnAdmRutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmCla", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string AdmCla
		{
			get
			{
				return this._AdmCla;
			}
			set
			{
				if ((this._AdmCla != value))
				{
					this.OnAdmClaChanging(value);
					this.SendPropertyChanging();
					this._AdmCla = value;
					this.SendPropertyChanged("AdmCla");
					this.OnAdmClaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmNom", DbType="VarChar(70) NOT NULL", CanBeNull=false)]
		public string AdmNom
		{
			get
			{
				return this._AdmNom;
			}
			set
			{
				if ((this._AdmNom != value))
				{
					this.OnAdmNomChanging(value);
					this.SendPropertyChanging();
					this._AdmNom = value;
					this.SendPropertyChanged("AdmNom");
					this.OnAdmNomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmApe", DbType="VarChar(70) NOT NULL", CanBeNull=false)]
		public string AdmApe
		{
			get
			{
				return this._AdmApe;
			}
			set
			{
				if ((this._AdmApe != value))
				{
					this.OnAdmApeChanging(value);
					this.SendPropertyChanging();
					this._AdmApe = value;
					this.SendPropertyChanged("AdmApe");
					this.OnAdmApeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmID", DbType="Int NOT NULL")]
		public int AdmID
		{
			get
			{
				return this._AdmID;
			}
			set
			{
				if ((this._AdmID != value))
				{
					if (this._UserPerfiles.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdmIDChanging(value);
					this.SendPropertyChanging();
					this._AdmID = value;
					this.SendPropertyChanged("AdmID");
					this.OnAdmIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserPerfiles_administrador", Storage="_UserPerfiles", ThisKey="AdmID", OtherKey="PerID", IsForeignKey=true)]
		public UserPerfiles UserPerfiles
		{
			get
			{
				return this._UserPerfiles.Entity;
			}
			set
			{
				UserPerfiles previousValue = this._UserPerfiles.Entity;
				if (((previousValue != value) 
							|| (this._UserPerfiles.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserPerfiles.Entity = null;
						previousValue.administrador.Remove(this);
					}
					this._UserPerfiles.Entity = value;
					if ((value != null))
					{
						value.administrador.Add(this);
						this._AdmID = value.PerID;
					}
					else
					{
						this._AdmID = default(int);
					}
					this.SendPropertyChanged("UserPerfiles");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cliente")]
	public partial class cliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CliRut;
		
		private string _CliNom;
		
		private string _CliApe;
		
		private string _CliTel;
		
		private string _CliEma;
		
		private string _CliCla;
		
		private string _CliClv;
		
		private int _CliSeg;
		
		private int _CliPer;
		
		private EntitySet<vehiculo> _vehiculo;
		
		private EntityRef<seguro> _seguro;
		
		private EntityRef<UserPerfiles> _UserPerfiles;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCliRutChanging(string value);
    partial void OnCliRutChanged();
    partial void OnCliNomChanging(string value);
    partial void OnCliNomChanged();
    partial void OnCliApeChanging(string value);
    partial void OnCliApeChanged();
    partial void OnCliTelChanging(string value);
    partial void OnCliTelChanged();
    partial void OnCliEmaChanging(string value);
    partial void OnCliEmaChanged();
    partial void OnCliClaChanging(string value);
    partial void OnCliClaChanged();
    partial void OnCliClvChanging(string value);
    partial void OnCliClvChanged();
    partial void OnCliSegChanging(int value);
    partial void OnCliSegChanged();
    partial void OnCliPerChanging(int value);
    partial void OnCliPerChanged();
    #endregion
		
		public cliente()
		{
			this._vehiculo = new EntitySet<vehiculo>(new Action<vehiculo>(this.attach_vehiculo), new Action<vehiculo>(this.detach_vehiculo));
			this._seguro = default(EntityRef<seguro>);
			this._UserPerfiles = default(EntityRef<UserPerfiles>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CliRut", DbType="Char(12) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CliRut
		{
			get
			{
				return this._CliRut;
			}
			set
			{
				if ((this._CliRut != value))
				{
					this.OnCliRutChanging(value);
					this.SendPropertyChanging();
					this._CliRut = value;
					this.SendPropertyChanged("CliRut");
					this.OnCliRutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CliNom", DbType="VarChar(70) NOT NULL", CanBeNull=false)]
		public string CliNom
		{
			get
			{
				return this._CliNom;
			}
			set
			{
				if ((this._CliNom != value))
				{
					this.OnCliNomChanging(value);
					this.SendPropertyChanging();
					this._CliNom = value;
					this.SendPropertyChanged("CliNom");
					this.OnCliNomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CliApe", DbType="VarChar(70) NOT NULL", CanBeNull=false)]
		public string CliApe
		{
			get
			{
				return this._CliApe;
			}
			set
			{
				if ((this._CliApe != value))
				{
					this.OnCliApeChanging(value);
					this.SendPropertyChanging();
					this._CliApe = value;
					this.SendPropertyChanged("CliApe");
					this.OnCliApeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CliTel", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string CliTel
		{
			get
			{
				return this._CliTel;
			}
			set
			{
				if ((this._CliTel != value))
				{
					this.OnCliTelChanging(value);
					this.SendPropertyChanging();
					this._CliTel = value;
					this.SendPropertyChanged("CliTel");
					this.OnCliTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CliEma", DbType="VarChar(70) NOT NULL", CanBeNull=false)]
		public string CliEma
		{
			get
			{
				return this._CliEma;
			}
			set
			{
				if ((this._CliEma != value))
				{
					this.OnCliEmaChanging(value);
					this.SendPropertyChanging();
					this._CliEma = value;
					this.SendPropertyChanged("CliEma");
					this.OnCliEmaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CliCla", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string CliCla
		{
			get
			{
				return this._CliCla;
			}
			set
			{
				if ((this._CliCla != value))
				{
					this.OnCliClaChanging(value);
					this.SendPropertyChanging();
					this._CliCla = value;
					this.SendPropertyChanged("CliCla");
					this.OnCliClaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CliClv", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string CliClv
		{
			get
			{
				return this._CliClv;
			}
			set
			{
				if ((this._CliClv != value))
				{
					this.OnCliClvChanging(value);
					this.SendPropertyChanging();
					this._CliClv = value;
					this.SendPropertyChanged("CliClv");
					this.OnCliClvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CliSeg", DbType="Int NOT NULL")]
		public int CliSeg
		{
			get
			{
				return this._CliSeg;
			}
			set
			{
				if ((this._CliSeg != value))
				{
					if (this._seguro.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCliSegChanging(value);
					this.SendPropertyChanging();
					this._CliSeg = value;
					this.SendPropertyChanged("CliSeg");
					this.OnCliSegChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CliPer", DbType="Int NOT NULL")]
		public int CliPer
		{
			get
			{
				return this._CliPer;
			}
			set
			{
				if ((this._CliPer != value))
				{
					if (this._UserPerfiles.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCliPerChanging(value);
					this.SendPropertyChanging();
					this._CliPer = value;
					this.SendPropertyChanged("CliPer");
					this.OnCliPerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cliente_vehiculo", Storage="_vehiculo", ThisKey="CliRut", OtherKey="VerRut")]
		public EntitySet<vehiculo> vehiculo
		{
			get
			{
				return this._vehiculo;
			}
			set
			{
				this._vehiculo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seguro_cliente", Storage="_seguro", ThisKey="CliSeg", OtherKey="SegID", IsForeignKey=true)]
		public seguro seguro
		{
			get
			{
				return this._seguro.Entity;
			}
			set
			{
				seguro previousValue = this._seguro.Entity;
				if (((previousValue != value) 
							|| (this._seguro.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._seguro.Entity = null;
						previousValue.cliente.Remove(this);
					}
					this._seguro.Entity = value;
					if ((value != null))
					{
						value.cliente.Add(this);
						this._CliSeg = value.SegID;
					}
					else
					{
						this._CliSeg = default(int);
					}
					this.SendPropertyChanged("seguro");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserPerfiles_cliente", Storage="_UserPerfiles", ThisKey="CliPer", OtherKey="PerID", IsForeignKey=true)]
		public UserPerfiles UserPerfiles
		{
			get
			{
				return this._UserPerfiles.Entity;
			}
			set
			{
				UserPerfiles previousValue = this._UserPerfiles.Entity;
				if (((previousValue != value) 
							|| (this._UserPerfiles.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserPerfiles.Entity = null;
						previousValue.cliente.Remove(this);
					}
					this._UserPerfiles.Entity = value;
					if ((value != null))
					{
						value.cliente.Add(this);
						this._CliPer = value.PerID;
					}
					else
					{
						this._CliPer = default(int);
					}
					this.SendPropertyChanged("UserPerfiles");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_vehiculo(vehiculo entity)
		{
			this.SendPropertyChanging();
			entity.cliente = this;
		}
		
		private void detach_vehiculo(vehiculo entity)
		{
			this.SendPropertyChanging();
			entity.cliente = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.marcas")]
	public partial class marcas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MarID;
		
		private string _MarDes;
		
		private EntitySet<modelos> _modelos;
		
		private EntitySet<vehiculo> _vehiculo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMarIDChanging(int value);
    partial void OnMarIDChanged();
    partial void OnMarDesChanging(string value);
    partial void OnMarDesChanged();
    #endregion
		
		public marcas()
		{
			this._modelos = new EntitySet<modelos>(new Action<modelos>(this.attach_modelos), new Action<modelos>(this.detach_modelos));
			this._vehiculo = new EntitySet<vehiculo>(new Action<vehiculo>(this.attach_vehiculo), new Action<vehiculo>(this.detach_vehiculo));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MarID
		{
			get
			{
				return this._MarID;
			}
			set
			{
				if ((this._MarID != value))
				{
					this.OnMarIDChanging(value);
					this.SendPropertyChanging();
					this._MarID = value;
					this.SendPropertyChanged("MarID");
					this.OnMarIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarDes", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string MarDes
		{
			get
			{
				return this._MarDes;
			}
			set
			{
				if ((this._MarDes != value))
				{
					this.OnMarDesChanging(value);
					this.SendPropertyChanging();
					this._MarDes = value;
					this.SendPropertyChanged("MarDes");
					this.OnMarDesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="marcas_modelos", Storage="_modelos", ThisKey="MarID", OtherKey="ModMar")]
		public EntitySet<modelos> modelos
		{
			get
			{
				return this._modelos;
			}
			set
			{
				this._modelos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="marcas_vehiculo", Storage="_vehiculo", ThisKey="MarID", OtherKey="VehMar")]
		public EntitySet<vehiculo> vehiculo
		{
			get
			{
				return this._vehiculo;
			}
			set
			{
				this._vehiculo.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_modelos(modelos entity)
		{
			this.SendPropertyChanging();
			entity.marcas = this;
		}
		
		private void detach_modelos(modelos entity)
		{
			this.SendPropertyChanging();
			entity.marcas = null;
		}
		
		private void attach_vehiculo(vehiculo entity)
		{
			this.SendPropertyChanging();
			entity.marcas = this;
		}
		
		private void detach_vehiculo(vehiculo entity)
		{
			this.SendPropertyChanging();
			entity.marcas = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mecanico")]
	public partial class mecanico : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MecID;
		
		private string _MecRut;
		
		private string _MecCla;
		
		private string _MecClv;
		
		private string _MecNom;
		
		private string _MecApe;
		
		private string _MecFon;
		
		private string _MecCor;
		
		private int _MecUid;
		
		private EntityRef<UserPerfiles> _UserPerfiles;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMecIDChanging(int value);
    partial void OnMecIDChanged();
    partial void OnMecRutChanging(string value);
    partial void OnMecRutChanged();
    partial void OnMecClaChanging(string value);
    partial void OnMecClaChanged();
    partial void OnMecClvChanging(string value);
    partial void OnMecClvChanged();
    partial void OnMecNomChanging(string value);
    partial void OnMecNomChanged();
    partial void OnMecApeChanging(string value);
    partial void OnMecApeChanged();
    partial void OnMecFonChanging(string value);
    partial void OnMecFonChanged();
    partial void OnMecCorChanging(string value);
    partial void OnMecCorChanged();
    partial void OnMecUidChanging(int value);
    partial void OnMecUidChanged();
    #endregion
		
		public mecanico()
		{
			this._UserPerfiles = default(EntityRef<UserPerfiles>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MecID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MecID
		{
			get
			{
				return this._MecID;
			}
			set
			{
				if ((this._MecID != value))
				{
					this.OnMecIDChanging(value);
					this.SendPropertyChanging();
					this._MecID = value;
					this.SendPropertyChanged("MecID");
					this.OnMecIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MecRut", DbType="Char(12) NOT NULL", CanBeNull=false)]
		public string MecRut
		{
			get
			{
				return this._MecRut;
			}
			set
			{
				if ((this._MecRut != value))
				{
					this.OnMecRutChanging(value);
					this.SendPropertyChanging();
					this._MecRut = value;
					this.SendPropertyChanged("MecRut");
					this.OnMecRutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MecCla", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MecCla
		{
			get
			{
				return this._MecCla;
			}
			set
			{
				if ((this._MecCla != value))
				{
					this.OnMecClaChanging(value);
					this.SendPropertyChanging();
					this._MecCla = value;
					this.SendPropertyChanged("MecCla");
					this.OnMecClaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MecClv", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MecClv
		{
			get
			{
				return this._MecClv;
			}
			set
			{
				if ((this._MecClv != value))
				{
					this.OnMecClvChanging(value);
					this.SendPropertyChanging();
					this._MecClv = value;
					this.SendPropertyChanged("MecClv");
					this.OnMecClvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MecNom", DbType="VarChar(70) NOT NULL", CanBeNull=false)]
		public string MecNom
		{
			get
			{
				return this._MecNom;
			}
			set
			{
				if ((this._MecNom != value))
				{
					this.OnMecNomChanging(value);
					this.SendPropertyChanging();
					this._MecNom = value;
					this.SendPropertyChanged("MecNom");
					this.OnMecNomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MecApe", DbType="VarChar(70) NOT NULL", CanBeNull=false)]
		public string MecApe
		{
			get
			{
				return this._MecApe;
			}
			set
			{
				if ((this._MecApe != value))
				{
					this.OnMecApeChanging(value);
					this.SendPropertyChanging();
					this._MecApe = value;
					this.SendPropertyChanged("MecApe");
					this.OnMecApeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MecFon", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string MecFon
		{
			get
			{
				return this._MecFon;
			}
			set
			{
				if ((this._MecFon != value))
				{
					this.OnMecFonChanging(value);
					this.SendPropertyChanging();
					this._MecFon = value;
					this.SendPropertyChanged("MecFon");
					this.OnMecFonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MecCor", DbType="VarChar(70) NOT NULL", CanBeNull=false)]
		public string MecCor
		{
			get
			{
				return this._MecCor;
			}
			set
			{
				if ((this._MecCor != value))
				{
					this.OnMecCorChanging(value);
					this.SendPropertyChanging();
					this._MecCor = value;
					this.SendPropertyChanged("MecCor");
					this.OnMecCorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MecUid", DbType="Int NOT NULL")]
		public int MecUid
		{
			get
			{
				return this._MecUid;
			}
			set
			{
				if ((this._MecUid != value))
				{
					if (this._UserPerfiles.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMecUidChanging(value);
					this.SendPropertyChanging();
					this._MecUid = value;
					this.SendPropertyChanged("MecUid");
					this.OnMecUidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserPerfiles_mecanico", Storage="_UserPerfiles", ThisKey="MecUid", OtherKey="PerID", IsForeignKey=true)]
		public UserPerfiles UserPerfiles
		{
			get
			{
				return this._UserPerfiles.Entity;
			}
			set
			{
				UserPerfiles previousValue = this._UserPerfiles.Entity;
				if (((previousValue != value) 
							|| (this._UserPerfiles.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserPerfiles.Entity = null;
						previousValue.mecanico.Remove(this);
					}
					this._UserPerfiles.Entity = value;
					if ((value != null))
					{
						value.mecanico.Add(this);
						this._MecUid = value.PerID;
					}
					else
					{
						this._MecUid = default(int);
					}
					this.SendPropertyChanged("UserPerfiles");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.modelos")]
	public partial class modelos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ModID;
		
		private int _ModMar;
		
		private string _ModDes;
		
		private EntityRef<marcas> _marcas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModIDChanging(int value);
    partial void OnModIDChanged();
    partial void OnModMarChanging(int value);
    partial void OnModMarChanged();
    partial void OnModDesChanging(string value);
    partial void OnModDesChanged();
    #endregion
		
		public modelos()
		{
			this._marcas = default(EntityRef<marcas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ModID
		{
			get
			{
				return this._ModID;
			}
			set
			{
				if ((this._ModID != value))
				{
					this.OnModIDChanging(value);
					this.SendPropertyChanging();
					this._ModID = value;
					this.SendPropertyChanged("ModID");
					this.OnModIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModMar", DbType="Int NOT NULL")]
		public int ModMar
		{
			get
			{
				return this._ModMar;
			}
			set
			{
				if ((this._ModMar != value))
				{
					if (this._marcas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModMarChanging(value);
					this.SendPropertyChanging();
					this._ModMar = value;
					this.SendPropertyChanged("ModMar");
					this.OnModMarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModDes", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ModDes
		{
			get
			{
				return this._ModDes;
			}
			set
			{
				if ((this._ModDes != value))
				{
					this.OnModDesChanging(value);
					this.SendPropertyChanging();
					this._ModDes = value;
					this.SendPropertyChanged("ModDes");
					this.OnModDesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="marcas_modelos", Storage="_marcas", ThisKey="ModMar", OtherKey="MarID", IsForeignKey=true)]
		public marcas marcas
		{
			get
			{
				return this._marcas.Entity;
			}
			set
			{
				marcas previousValue = this._marcas.Entity;
				if (((previousValue != value) 
							|| (this._marcas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._marcas.Entity = null;
						previousValue.modelos.Remove(this);
					}
					this._marcas.Entity = value;
					if ((value != null))
					{
						value.modelos.Add(this);
						this._ModMar = value.MarID;
					}
					else
					{
						this._ModMar = default(int);
					}
					this.SendPropertyChanged("marcas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.motor")]
	public partial class motor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MotID;
		
		private string _MotDes;
		
		private EntitySet<vehiculo> _vehiculo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMotIDChanging(int value);
    partial void OnMotIDChanged();
    partial void OnMotDesChanging(string value);
    partial void OnMotDesChanged();
    #endregion
		
		public motor()
		{
			this._vehiculo = new EntitySet<vehiculo>(new Action<vehiculo>(this.attach_vehiculo), new Action<vehiculo>(this.detach_vehiculo));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MotID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MotID
		{
			get
			{
				return this._MotID;
			}
			set
			{
				if ((this._MotID != value))
				{
					this.OnMotIDChanging(value);
					this.SendPropertyChanging();
					this._MotID = value;
					this.SendPropertyChanged("MotID");
					this.OnMotIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MotDes", DbType="VarChar(15)")]
		public string MotDes
		{
			get
			{
				return this._MotDes;
			}
			set
			{
				if ((this._MotDes != value))
				{
					this.OnMotDesChanging(value);
					this.SendPropertyChanging();
					this._MotDes = value;
					this.SendPropertyChanged("MotDes");
					this.OnMotDesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="motor_vehiculo", Storage="_vehiculo", ThisKey="MotID", OtherKey="VehMot")]
		public EntitySet<vehiculo> vehiculo
		{
			get
			{
				return this._vehiculo;
			}
			set
			{
				this._vehiculo.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_vehiculo(vehiculo entity)
		{
			this.SendPropertyChanging();
			entity.motor = this;
		}
		
		private void detach_vehiculo(vehiculo entity)
		{
			this.SendPropertyChanging();
			entity.motor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.seguro")]
	public partial class seguro : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SegID;
		
		private string _SegTip;
		
		private int _SedDes;
		
		private int _SegVal;
		
		private EntitySet<cliente> _cliente;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSegIDChanging(int value);
    partial void OnSegIDChanged();
    partial void OnSegTipChanging(string value);
    partial void OnSegTipChanged();
    partial void OnSedDesChanging(int value);
    partial void OnSedDesChanged();
    partial void OnSegValChanging(int value);
    partial void OnSegValChanged();
    #endregion
		
		public seguro()
		{
			this._cliente = new EntitySet<cliente>(new Action<cliente>(this.attach_cliente), new Action<cliente>(this.detach_cliente));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SegID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SegID
		{
			get
			{
				return this._SegID;
			}
			set
			{
				if ((this._SegID != value))
				{
					this.OnSegIDChanging(value);
					this.SendPropertyChanging();
					this._SegID = value;
					this.SendPropertyChanged("SegID");
					this.OnSegIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SegTip", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string SegTip
		{
			get
			{
				return this._SegTip;
			}
			set
			{
				if ((this._SegTip != value))
				{
					this.OnSegTipChanging(value);
					this.SendPropertyChanging();
					this._SegTip = value;
					this.SendPropertyChanged("SegTip");
					this.OnSegTipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SedDes", DbType="Int NOT NULL")]
		public int SedDes
		{
			get
			{
				return this._SedDes;
			}
			set
			{
				if ((this._SedDes != value))
				{
					this.OnSedDesChanging(value);
					this.SendPropertyChanging();
					this._SedDes = value;
					this.SendPropertyChanged("SedDes");
					this.OnSedDesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SegVal", DbType="Int NOT NULL")]
		public int SegVal
		{
			get
			{
				return this._SegVal;
			}
			set
			{
				if ((this._SegVal != value))
				{
					this.OnSegValChanging(value);
					this.SendPropertyChanging();
					this._SegVal = value;
					this.SendPropertyChanged("SegVal");
					this.OnSegValChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seguro_cliente", Storage="_cliente", ThisKey="SegID", OtherKey="CliSeg")]
		public EntitySet<cliente> cliente
		{
			get
			{
				return this._cliente;
			}
			set
			{
				this._cliente.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_cliente(cliente entity)
		{
			this.SendPropertyChanging();
			entity.seguro = this;
		}
		
		private void detach_cliente(cliente entity)
		{
			this.SendPropertyChanging();
			entity.seguro = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserPerfiles")]
	public partial class UserPerfiles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PerID;
		
		private string _PerDes;
		
		private EntitySet<administrador> _administrador;
		
		private EntitySet<cliente> _cliente;
		
		private EntitySet<mecanico> _mecanico;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPerIDChanging(int value);
    partial void OnPerIDChanged();
    partial void OnPerDesChanging(string value);
    partial void OnPerDesChanged();
    #endregion
		
		public UserPerfiles()
		{
			this._administrador = new EntitySet<administrador>(new Action<administrador>(this.attach_administrador), new Action<administrador>(this.detach_administrador));
			this._cliente = new EntitySet<cliente>(new Action<cliente>(this.attach_cliente), new Action<cliente>(this.detach_cliente));
			this._mecanico = new EntitySet<mecanico>(new Action<mecanico>(this.attach_mecanico), new Action<mecanico>(this.detach_mecanico));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PerID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PerID
		{
			get
			{
				return this._PerID;
			}
			set
			{
				if ((this._PerID != value))
				{
					this.OnPerIDChanging(value);
					this.SendPropertyChanging();
					this._PerID = value;
					this.SendPropertyChanged("PerID");
					this.OnPerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PerDes", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string PerDes
		{
			get
			{
				return this._PerDes;
			}
			set
			{
				if ((this._PerDes != value))
				{
					this.OnPerDesChanging(value);
					this.SendPropertyChanging();
					this._PerDes = value;
					this.SendPropertyChanged("PerDes");
					this.OnPerDesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserPerfiles_administrador", Storage="_administrador", ThisKey="PerID", OtherKey="AdmID")]
		public EntitySet<administrador> administrador
		{
			get
			{
				return this._administrador;
			}
			set
			{
				this._administrador.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserPerfiles_cliente", Storage="_cliente", ThisKey="PerID", OtherKey="CliPer")]
		public EntitySet<cliente> cliente
		{
			get
			{
				return this._cliente;
			}
			set
			{
				this._cliente.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserPerfiles_mecanico", Storage="_mecanico", ThisKey="PerID", OtherKey="MecUid")]
		public EntitySet<mecanico> mecanico
		{
			get
			{
				return this._mecanico;
			}
			set
			{
				this._mecanico.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_administrador(administrador entity)
		{
			this.SendPropertyChanging();
			entity.UserPerfiles = this;
		}
		
		private void detach_administrador(administrador entity)
		{
			this.SendPropertyChanging();
			entity.UserPerfiles = null;
		}
		
		private void attach_cliente(cliente entity)
		{
			this.SendPropertyChanging();
			entity.UserPerfiles = this;
		}
		
		private void detach_cliente(cliente entity)
		{
			this.SendPropertyChanging();
			entity.UserPerfiles = null;
		}
		
		private void attach_mecanico(mecanico entity)
		{
			this.SendPropertyChanging();
			entity.UserPerfiles = this;
		}
		
		private void detach_mecanico(mecanico entity)
		{
			this.SendPropertyChanging();
			entity.UserPerfiles = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vehiculo")]
	public partial class vehiculo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VehID;
		
		private string _VerRut;
		
		private string _VehAno;
		
		private string _VehPat;
		
		private int _VehMot;
		
		private int _VehMar;
		
		private EntityRef<marcas> _marcas;
		
		private EntityRef<motor> _motor;
		
		private EntityRef<cliente> _cliente;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVehIDChanging(int value);
    partial void OnVehIDChanged();
    partial void OnVerRutChanging(string value);
    partial void OnVerRutChanged();
    partial void OnVehAnoChanging(string value);
    partial void OnVehAnoChanged();
    partial void OnVehPatChanging(string value);
    partial void OnVehPatChanged();
    partial void OnVehMotChanging(int value);
    partial void OnVehMotChanged();
    partial void OnVehMarChanging(int value);
    partial void OnVehMarChanged();
    #endregion
		
		public vehiculo()
		{
			this._marcas = default(EntityRef<marcas>);
			this._motor = default(EntityRef<motor>);
			this._cliente = default(EntityRef<cliente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VehID
		{
			get
			{
				return this._VehID;
			}
			set
			{
				if ((this._VehID != value))
				{
					this.OnVehIDChanging(value);
					this.SendPropertyChanging();
					this._VehID = value;
					this.SendPropertyChanged("VehID");
					this.OnVehIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerRut", DbType="Char(12) NOT NULL", CanBeNull=false)]
		public string VerRut
		{
			get
			{
				return this._VerRut;
			}
			set
			{
				if ((this._VerRut != value))
				{
					if (this._cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVerRutChanging(value);
					this.SendPropertyChanging();
					this._VerRut = value;
					this.SendPropertyChanged("VerRut");
					this.OnVerRutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehAno", DbType="Char(4) NOT NULL", CanBeNull=false)]
		public string VehAno
		{
			get
			{
				return this._VehAno;
			}
			set
			{
				if ((this._VehAno != value))
				{
					this.OnVehAnoChanging(value);
					this.SendPropertyChanging();
					this._VehAno = value;
					this.SendPropertyChanged("VehAno");
					this.OnVehAnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehPat", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string VehPat
		{
			get
			{
				return this._VehPat;
			}
			set
			{
				if ((this._VehPat != value))
				{
					this.OnVehPatChanging(value);
					this.SendPropertyChanging();
					this._VehPat = value;
					this.SendPropertyChanged("VehPat");
					this.OnVehPatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehMot", DbType="Int NOT NULL")]
		public int VehMot
		{
			get
			{
				return this._VehMot;
			}
			set
			{
				if ((this._VehMot != value))
				{
					if (this._motor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVehMotChanging(value);
					this.SendPropertyChanging();
					this._VehMot = value;
					this.SendPropertyChanged("VehMot");
					this.OnVehMotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehMar", DbType="Int NOT NULL")]
		public int VehMar
		{
			get
			{
				return this._VehMar;
			}
			set
			{
				if ((this._VehMar != value))
				{
					if (this._marcas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVehMarChanging(value);
					this.SendPropertyChanging();
					this._VehMar = value;
					this.SendPropertyChanged("VehMar");
					this.OnVehMarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="marcas_vehiculo", Storage="_marcas", ThisKey="VehMar", OtherKey="MarID", IsForeignKey=true)]
		public marcas marcas
		{
			get
			{
				return this._marcas.Entity;
			}
			set
			{
				marcas previousValue = this._marcas.Entity;
				if (((previousValue != value) 
							|| (this._marcas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._marcas.Entity = null;
						previousValue.vehiculo.Remove(this);
					}
					this._marcas.Entity = value;
					if ((value != null))
					{
						value.vehiculo.Add(this);
						this._VehMar = value.MarID;
					}
					else
					{
						this._VehMar = default(int);
					}
					this.SendPropertyChanged("marcas");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="motor_vehiculo", Storage="_motor", ThisKey="VehMot", OtherKey="MotID", IsForeignKey=true)]
		public motor motor
		{
			get
			{
				return this._motor.Entity;
			}
			set
			{
				motor previousValue = this._motor.Entity;
				if (((previousValue != value) 
							|| (this._motor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._motor.Entity = null;
						previousValue.vehiculo.Remove(this);
					}
					this._motor.Entity = value;
					if ((value != null))
					{
						value.vehiculo.Add(this);
						this._VehMot = value.MotID;
					}
					else
					{
						this._VehMot = default(int);
					}
					this.SendPropertyChanged("motor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cliente_vehiculo", Storage="_cliente", ThisKey="VerRut", OtherKey="CliRut", IsForeignKey=true)]
		public cliente cliente
		{
			get
			{
				return this._cliente.Entity;
			}
			set
			{
				cliente previousValue = this._cliente.Entity;
				if (((previousValue != value) 
							|| (this._cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cliente.Entity = null;
						previousValue.vehiculo.Remove(this);
					}
					this._cliente.Entity = value;
					if ((value != null))
					{
						value.vehiculo.Add(this);
						this._VerRut = value.CliRut;
					}
					else
					{
						this._VerRut = default(string);
					}
					this.SendPropertyChanged("cliente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class LISTAR_MECANICOResult
	{
		
		private string _MecRut;
		
		private string _MecCla;
		
		private string _MecClv;
		
		private string _MecNom;
		
		private string _MecApe;
		
		private string _MecFon;
		
		private string _MecCor;
		
		public LISTAR_MECANICOResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MecRut", DbType="Char(12) NOT NULL", CanBeNull=false)]
		public string MecRut
		{
			get
			{
				return this._MecRut;
			}
			set
			{
				if ((this._MecRut != value))
				{
					this._MecRut = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MecCla", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MecCla
		{
			get
			{
				return this._MecCla;
			}
			set
			{
				if ((this._MecCla != value))
				{
					this._MecCla = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MecClv", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MecClv
		{
			get
			{
				return this._MecClv;
			}
			set
			{
				if ((this._MecClv != value))
				{
					this._MecClv = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MecNom", DbType="VarChar(70) NOT NULL", CanBeNull=false)]
		public string MecNom
		{
			get
			{
				return this._MecNom;
			}
			set
			{
				if ((this._MecNom != value))
				{
					this._MecNom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MecApe", DbType="VarChar(70) NOT NULL", CanBeNull=false)]
		public string MecApe
		{
			get
			{
				return this._MecApe;
			}
			set
			{
				if ((this._MecApe != value))
				{
					this._MecApe = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MecFon", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string MecFon
		{
			get
			{
				return this._MecFon;
			}
			set
			{
				if ((this._MecFon != value))
				{
					this._MecFon = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MecCor", DbType="VarChar(70) NOT NULL", CanBeNull=false)]
		public string MecCor
		{
			get
			{
				return this._MecCor;
			}
			set
			{
				if ((this._MecCor != value))
				{
					this._MecCor = value;
				}
			}
		}
	}
	
	public partial class BUSCAR_MECANICOResult
	{
		
		private int _MecID;
		
		private string _MecRut;
		
		private string _MecCla;
		
		private string _MecClv;
		
		private string _MecNom;
		
		private string _MecApe;
		
		private string _MecFon;
		
		private string _MecCor;
		
		private int _MecUid;
		
		public BUSCAR_MECANICOResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MecID", DbType="Int NOT NULL")]
		public int MecID
		{
			get
			{
				return this._MecID;
			}
			set
			{
				if ((this._MecID != value))
				{
					this._MecID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MecRut", DbType="Char(12) NOT NULL", CanBeNull=false)]
		public string MecRut
		{
			get
			{
				return this._MecRut;
			}
			set
			{
				if ((this._MecRut != value))
				{
					this._MecRut = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MecCla", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MecCla
		{
			get
			{
				return this._MecCla;
			}
			set
			{
				if ((this._MecCla != value))
				{
					this._MecCla = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MecClv", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MecClv
		{
			get
			{
				return this._MecClv;
			}
			set
			{
				if ((this._MecClv != value))
				{
					this._MecClv = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MecNom", DbType="VarChar(70) NOT NULL", CanBeNull=false)]
		public string MecNom
		{
			get
			{
				return this._MecNom;
			}
			set
			{
				if ((this._MecNom != value))
				{
					this._MecNom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MecApe", DbType="VarChar(70) NOT NULL", CanBeNull=false)]
		public string MecApe
		{
			get
			{
				return this._MecApe;
			}
			set
			{
				if ((this._MecApe != value))
				{
					this._MecApe = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MecFon", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string MecFon
		{
			get
			{
				return this._MecFon;
			}
			set
			{
				if ((this._MecFon != value))
				{
					this._MecFon = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MecCor", DbType="VarChar(70) NOT NULL", CanBeNull=false)]
		public string MecCor
		{
			get
			{
				return this._MecCor;
			}
			set
			{
				if ((this._MecCor != value))
				{
					this._MecCor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MecUid", DbType="Int NOT NULL")]
		public int MecUid
		{
			get
			{
				return this._MecUid;
			}
			set
			{
				if ((this._MecUid != value))
				{
					this._MecUid = value;
				}
			}
		}
	}
	
	public partial class LISTAR_CLIENTEResult
	{
		
		private string _CliRut;
		
		private string _CliNom;
		
		private string _CliApe;
		
		private string _CliTel;
		
		private string _CliCla;
		
		private string _CliClv;
		
		private string _CliEma;
		
		private string _SegTip;
		
		public LISTAR_CLIENTEResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CliRut", DbType="Char(12) NOT NULL", CanBeNull=false)]
		public string CliRut
		{
			get
			{
				return this._CliRut;
			}
			set
			{
				if ((this._CliRut != value))
				{
					this._CliRut = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CliNom", DbType="VarChar(70) NOT NULL", CanBeNull=false)]
		public string CliNom
		{
			get
			{
				return this._CliNom;
			}
			set
			{
				if ((this._CliNom != value))
				{
					this._CliNom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CliApe", DbType="VarChar(70) NOT NULL", CanBeNull=false)]
		public string CliApe
		{
			get
			{
				return this._CliApe;
			}
			set
			{
				if ((this._CliApe != value))
				{
					this._CliApe = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CliTel", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string CliTel
		{
			get
			{
				return this._CliTel;
			}
			set
			{
				if ((this._CliTel != value))
				{
					this._CliTel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CliCla", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string CliCla
		{
			get
			{
				return this._CliCla;
			}
			set
			{
				if ((this._CliCla != value))
				{
					this._CliCla = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CliClv", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string CliClv
		{
			get
			{
				return this._CliClv;
			}
			set
			{
				if ((this._CliClv != value))
				{
					this._CliClv = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CliEma", DbType="VarChar(70) NOT NULL", CanBeNull=false)]
		public string CliEma
		{
			get
			{
				return this._CliEma;
			}
			set
			{
				if ((this._CliEma != value))
				{
					this._CliEma = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SegTip", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string SegTip
		{
			get
			{
				return this._SegTip;
			}
			set
			{
				if ((this._SegTip != value))
				{
					this._SegTip = value;
				}
			}
		}
	}
	
	public partial class LISTAR_VEHICULOResult
	{
		
		private string _VerRut;
		
		private string _VehAno;
		
		private string _VehPat;
		
		private string _MotDes;
		
		private string _MarDes;
		
		private string _ModDes;
		
		public LISTAR_VEHICULOResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerRut", DbType="Char(12) NOT NULL", CanBeNull=false)]
		public string VerRut
		{
			get
			{
				return this._VerRut;
			}
			set
			{
				if ((this._VerRut != value))
				{
					this._VerRut = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehAno", DbType="Char(4) NOT NULL", CanBeNull=false)]
		public string VehAno
		{
			get
			{
				return this._VehAno;
			}
			set
			{
				if ((this._VehAno != value))
				{
					this._VehAno = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehPat", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string VehPat
		{
			get
			{
				return this._VehPat;
			}
			set
			{
				if ((this._VehPat != value))
				{
					this._VehPat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MotDes", DbType="VarChar(15)")]
		public string MotDes
		{
			get
			{
				return this._MotDes;
			}
			set
			{
				if ((this._MotDes != value))
				{
					this._MotDes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarDes", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string MarDes
		{
			get
			{
				return this._MarDes;
			}
			set
			{
				if ((this._MarDes != value))
				{
					this._MarDes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModDes", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ModDes
		{
			get
			{
				return this._ModDes;
			}
			set
			{
				if ((this._ModDes != value))
				{
					this._ModDes = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
